<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAk
        5wAAJOcB9K2rBgAAAaFJREFUWEftmEuOQUEUhq3AMxHvCANiQIKJidiQkcQOmBj1tsRjIcIO5PQ5VVf6
        dvkLpdN9dKf/5Kvc5L9OfQOXIkFu3t6IxmOi4ZCo17N0OkSt1tdpty39PtFkQrRaRZt+xAqdTnzFl5oc
        j0aFr2R1Si1Exa5OoYWo0HJ5XWixWLDQYIBLDfjNnqBmE5ca1OssVKvhUoNq9RWFKhVcalAus1CphEvE
        dmseTRPUx7lkv8c9gl0SYgVLl90u2iEWdJ/g5lGpYpGFeIGliy/P3of43ULJZDQZJJ+3+JJK4ZkuQUJC
        Oh3tEJBMBs9CBAsJ2azlXnI5C5rh4ymhC3LQ8kUOdOg19/hbQudztLsn6DX3eEooNGiGj2AhX0Yjiy9o
        FiJIyJf4k3Tr6YvP8vGaQo9+uR4O0eRYRMC9D314yk8c9z6EEQo5fsSlbn0dSHfJozKCOX680gHNCP2f
        qW9ghBoNXGpgfgbJvxuo1KDbZaH5HJcazGYsJEGlBqJiV6fQQlTMutlclz/Nem1U+MrJdErmySsUzEf5
        tyCzZQ/Z61OI3gH+sq+8NGQcIgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uuIN9F8NQPdUGz5qcQAAAABJRU5ErkJggg==
</value>
  </data>
</root>